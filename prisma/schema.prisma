generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
}

model StudySpot {
  id              String       @default(cuid()) @id
  name            String       @unique
  address         String
  latitude        String?
  longitude       String?
  photos          String[]
  freeWifi        String?
  noiseLevel      String?
  seatingCapacity String?
  hours           String?
  powerOutlets    String?
  accessibility   String?
  publicRestrooms String?
  indoorOutdoor   String?
  studyResources  String?
  reviews         Review[]
  school          School       @relation(fields: [schoolId], references: [id])
  schoolId        String
  user            User         @relation(fields: [userId], references: [id])
  userId          String
}

model Review {
  id          String   @default(cuid()) @id
  content     String
  likes       Like[]
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
  studySpot   StudySpot @relation(fields: [studySpotId], references: [id])
  studySpotId String
}

model Like {
  id         String  @default(cuid()) @id
  review     Review  @relation(fields: [reviewId], references: [id])
  reviewId   String
  student    User    @relation(fields: [studentId], references: [id])
  studentId  String
}

model School {
  id         String   @default(cuid()) @id
  name       String   @unique
  city       String?
  students   User[]
  address    String
  photos     String?
  studySpots StudySpot[]
}

model User {
  id          String   @default(cuid()) @id
  email       String   @unique
  name        String?
  avatar      String?
  password    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  reviews     Review[]
  studySpots  StudySpot[]
  school      School? @relation(fields: [schoolId], references: [id])  
  schoolId    String?  
  likes       Like[]
}

